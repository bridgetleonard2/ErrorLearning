hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(family="Calibri", color = c("#000000"), size = 16), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(family="Calibri", color = c("#000000"), size = 16), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Final Test Performance", size = 20, font = list(family = "Calibri")),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(family = "Calibri", size = 16)),
yaxis = list(title = "Accuracy",
titlefont = list(family = "Calibri", size = 16)),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
# Adjust the layout
p1 <- p1 %>%
layout(
title = list(text = "Performance Overview", size = 18),
xaxis = list(
title = "Condition",
autotypenumbers = "strict",
range = c(0.5, 2.5),
ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array"
),
yaxis = list(title = "Accuracy"),
legend = list(traceorder = 'reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
library(htmlwidgets)
# Assuming p1 is your Plotly plot object
htmlwidgets::saveWidget(as_widget(p1), file = "shiny_app/error_learning/www/summary.html")
error_better <- cleandata_agg_pred %>%
filter(type == 'Observed') %>%
dplyr::select(participant, condition, Accuracy) %>%
pivot_wider(names_from = condition, values_from = Accuracy) %>%
group_by(participant) %>%
summarize(accuracy_diff = error - study) %>%
mutate(Learner = case_when(accuracy_diff > 0 ~ 'Error Items', accuracy_diff <= 0 ~ 'Study Items'))
error_better <- error_better %>%
group_by(Learner) %>%
summarize(count = n())
colors = c("#e74c3c", "#2ecc71")
# Create pie chart with custom colors
pie1 <- plot_ly(
data = error_better,
labels = ~Learner,
values = ~count,
type = 'pie',
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Better performance on Study vs Error",size=18),
showlegend = FALSE,
font = list(size = "2vmin", color = "#000000")
)
# Print the chart
pie1
htmlwidgets::saveWidget(pie1, file = "shiny_app/error_learning/www/accuracy.html")
error_better <- cleandata_agg_pred %>%
filter(type == 'Observed') %>%
dplyr::select(participant, condition, Accuracy) %>%
pivot_wider(names_from = condition, values_from = Accuracy) %>%
group_by(participant) %>%
summarize(accuracy_diff = error - study) %>%
mutate(Learner = case_when(accuracy_diff > 0 ~ 'Error Items', accuracy_diff <= 0 ~ 'Study Items'))
error_better <- error_better %>%
group_by(Learner) %>%
summarize(count = n())
colors = c("#e74c3c", "#2ecc71")
# Create pie chart with custom colors
pie1 <- plot_ly(
data = error_better,
labels = ~Learner,
values = ~count,
type = 'pie',
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Better performance on Study vs Error",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie1
htmlwidgets::saveWidget(pie1, file = "shiny_app/error_learning/www/accuracy.html")
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = "2.5vmin"), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = "2.5vmin"), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list("2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list("2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = "2.5vmin"), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = "2.5vmin"), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = "4vmin"), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = "4vmin"), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 18), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 18), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
library(htmlwidgets)
# Assuming p1 is your Plotly plot object
htmlwidgets::saveWidget(as_widget(p1), file = "shiny_app/error_learning/www/summary.html")
lldata <- read.csv("LL_model1.csv")
lldata <- lldata %>%
filter(X != 61)
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
rotation = 45,
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
rotation = 210,
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
rotation = 180,
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
rotation = 160,
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
colors = c("#f39c12", "#9b59b6")
ll_pie <- lldata %>%
dplyr::select(best.model) %>%
group_by(best.model) %>%
summarize(count = n())
# Create pie chart with custom colors
pie2 <- plot_ly(
data = ll_pie,
labels = ~best.model,
values = ~count,
type = 'pie',
rotation = 150,
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Type of Learner",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie2
htmlwidgets::saveWidget(pie2, file = "shiny_app/error_learning/www/learner.html")
error_better <- cleandata_agg_pred %>%
filter(type == 'Observed') %>%
dplyr::select(participant, condition, Accuracy) %>%
pivot_wider(names_from = condition, values_from = Accuracy) %>%
group_by(participant) %>%
summarize(accuracy_diff = error - study) %>%
mutate(Learner = case_when(accuracy_diff > 0 ~ 'Error Items', accuracy_diff <= 0 ~ 'Study Items'))
error_better <- error_better %>%
group_by(Learner) %>%
summarize(count = n())
colors = c("#e74c3c", "#2ecc71")
# Create pie chart with custom colors
pie1 <- plot_ly(
data = error_better,
labels = ~Learner,
values = ~count,
type = 'pie',
textinfo = "label+percent",
hoverinfo = "text+value",
hole = 0.6,
marker = list(colors = colors, line = list(color = '#FFFFFF', width = 1))
) %>%
layout(
title = list(text="Best Performance",size=18),
showlegend = FALSE,
font = list(size = "4vmin", color = "#000000")
)
# Print the chart
pie1
htmlwidgets::saveWidget(pie1, file = "shiny_app/error_learning/www/accuracy.html")
p1 <- plot_ly(data = cleandata_agg_pred %>% filter(type=="Observed") %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = "8vmax"), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = "8vmax"), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_experiment.R')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_experiment.R')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_experiment.R')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_experiment.R')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_experiment.R')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
