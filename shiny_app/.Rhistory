cleandata <- read.csv("behavioral_data/clean_data.csv")
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
View(cleandata)
cleandata_participant <- cleandata %>%
group_by(participant) %>%
group_by(condition) %>%
summarize(
performance = (sum(correct) / n())
)
View(cleandata_participant)
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
stError = sd(performance) / sqrt(length(performance))
)
View(cleandata_summary)
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
View(cleandata_participant)
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
View(cleandata_participant)
cleandata <- read.csv("shiny_app/error_learning/www/formatted_data.csv")
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
performance = mean(performance),
sd = sd(performance),
stdError = sd(performance) / sqrt(length(performance))
)
View(cleandata_participant)
View(cleandata_summary)
cleandata_participant
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
mean_performance = mean(performance),
sd_performance = sd(performance),
n = n(),
stError = sd_performance / sqrt(n)
)
cleandata_participant
cleandata_participant <- cleandata %>%
group_by(participant, condition) %>%
summarize(
performance = (sum(correct) / n())
)
cleandata_summary <- cleandata_participant %>%
group_by(condition) %>%
summarize(
mean_performance = mean(performance),
sd_performance = sd(performance),
n = n(),
stError = sd_performance / sqrt(n)
)
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summar%>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%"),
showlegend=FALSE) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%"),
showlegend=FALSE) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata %>% group_by(participant), x = ~cond, y = ~Accuracy, color = ~condition, showscale = FALSE) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~Accuracy,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(Accuracy*100, 2), "%")) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="error"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error") %>%
add_markers(data = cleandata_summary_pred %>% filter(type =="Observed") %>%  filter(condition=="study"), x = ~cond, y = ~Accuracy, error_y = list(type= "data", array = ~accuracy_se,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study") %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "error" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary_pred %>% filter(condition == "study" & type =="Observed"), x = ~cond, y = ~Accuracy, text = ~paste0(round(Accuracy * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
legend = list(traceorder='reversed'),
showlegend = FALSE,
hovermode = "closest"
)
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance, color = ~condition, showscale = FALSE) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%"),
showlegend=FALSE) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
showlegend = FALSE,
hovermode = "closest"
)
p1
p1 <- plot_ly(data = cleandata_participant, x = ~condition, y = ~performance) %>%
add_markers(alpha = 0.75, color = I("#D9D6C7"), split = ~participant, marker = list(size=5),
text = ~performance,
textposition = "auto",
hoverinfo = "text",
hovertext = ~paste0("Participant: ", participant,
"<br> Observed Accuracy: ", round(performance*100, 2), "%"),
showlegend=FALSE) %>%
add_lines(color = I("#D9D6C7"), line = list(width = 0.3), split = ~participant,
showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition== 1), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#e74c3c', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#e74c3c", size = 12), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_markers(data = cleandata_summary %>%  filter(condition==2), x = ~condition, y = ~mean_performance, error_y = list(type= "data", array = ~stError,color = '#2ecc71', thickness=2), type = "scatter", mode = "markers", marker = list(color = "#2ecc71", size = 12), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 1), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.5, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Error", showlegend=FALSE) %>%
add_text(data = cleandata_summary %>% filter(condition == 2), x = ~condition, y = ~mean_performance, text = ~paste0(round(mean_performance * 100, 2), "%"), hjust = -0.2, textfont=list(color = c("#000000"), size = 17), legendgroup="average",
name="Average - Study", showlegend=FALSE) %>%
style(textposition = "top right") %>%
layout(
title = list(text= "Performance Overview", size = "3vmin"),
xaxis = list(title = "Condition", autotypenumbers = "strict", range = c(0.5, 2.5), ticktext = list("Study Items", "Error Items"),
tickvals = list(1, 2),
tickmode = "array",
titlefont = list(size = "2.5vmin")),
yaxis = list(title = "Accuracy",
titlefont = list(size = "2.5vmin")),
showlegend = FALSE,
hovermode = "closest"
)
p1
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
View(cleandata)
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
View(cleandata)
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
install.packages("htmltools")
install.packages("htmltools")
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
shiny::runApp('C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning')
reticulate::py_last_error()
# # Run MLE to find learner type: output: "you fit the ___ model x% better than the ___ model"
source_python("LLerror.py")
LL_data <- read.csv("www/LL_model1.csv", row.names = NULL)
setwd("C:/Users/Bridget Leonard/Desktop/error_learning/shiny_app/error_learning")
source_python("LLerror.py")
LL_data <- read.csv("www/LL_model1.csv", row.names = NULL)
LL_data <- LL_data[-nrow(LL_data), -1]
LL_results <- ll_participant(clean_data, ppt_code, LL_data)
ppt_code = 1070
source_python("LLerror.py")
LL_data <- read.csv("www/LL_model1.csv", row.names = NULL)
LL_data <- LL_data[-nrow(LL_data), -1]
LL_results <- ll_participant(clean_data, ppt_code, LL_data)
View(LL_data)
LL_results
LL_results <- ll_participant(clean_data, ppt_code, LL_data)
LL_data <- read.csv("www/LL_model1.csv", row.names = NULL)
LL_data <- LL_data[-nrow(LL_data), -1]
LL_results <- ll_participant(clean_data, ppt_code, LL_data)
reticulate::py_last_error()
View(clean_data)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
